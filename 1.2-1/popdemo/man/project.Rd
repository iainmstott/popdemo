% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/project.R
\name{project}
\alias{project}
\title{Project population dynamics}
\usage{
project(A, vector = "n", time = 100, standard.A = FALSE,
  standard.vec = FALSE, return.vec = FALSE, Aseq = "unif", draws = 1000,
  alpha.draws = "unif", PREcheck = TRUE)
}
\arguments{
\item{A}{a matrix, or list of matrices. If \code{A} is a matrix, then 
\code{project} performs a 'deterministic' projection, where the matrix
does not change with each timestep. If \code{A} is a list of matrices, then 
\code{project} performs a 'stochastic' projection where the matrix varies 
with each timestep. The sequence of matrices is determined using \code{Aseq}. 
Matrices must be square, non-negative and numeric. If \code{A} is a list, 
all matrices must have the same dimension. 'projection' objects inherit
names from \code{A}: if \code{A} is a matrix, stage names are inherited from 
its column names. If \code{A} is a list, stage names are inherited from the 
column names of the first matrix, and matrix names are inherited from the 
names of the list elements.}

\item{vector}{(optional) a numeric vector or matrix describing 
the age/stage distribution(s) used to calculate the projection. Single
population vectors can be given either as a numeric vector or 
one-column matrix. Multiple vectors are specified as a matrix, where 
each column describes a single population vector, so the number
of rows of the matrix should be equal to the matrix dimension, whilst the 
number of columns gives the number of vectors to project. \code{vector} may
also take either "n" (default) to calculate the set of stage-biased projections 
(see details), or "diri" to project random population vectors drawn from a 
dirichlet distribution (see details).}

\item{time}{the number of projection intervals.}

\item{standard.A}{(optional) if \code{TRUE}, scales each matrix in \code{A}
by dividing all elements by the dominant eigenvalue. This standardises 
asymptotic dynamics: the dominant eigenvalue of the scaled matrix is 1. 
Useful for assessing transient dynamics.}

\item{standard.vec}{(optional) if \code{TRUE}, standardises each \code{vector} 
to sum to 1, by dividing each vector by its sum. Useful for assessing projection
relative to initial population size.}

\item{return.vec}{(optional) if \code{TRUE}, returns the time series of 
demographic (st)age vectors as well as overall population size.}

\item{Aseq}{(optional) the sequence of matrices in a stochastic projection. 
\code{Aseq} may be either:
\itemize{
 \item "unif" (default), which results in every matrix in \code{A} having an 
 equal, random chance of being chosen at each timestep.
 \item a square, nonnegative left-stochastic matrix describing a 
 first-order markov chain used to choose the matrices. This should have the 
 same dimension as the number of messages in \code{A}. 
 \item a numeric vector giving a specific sequence which corresponds to the
 matrices in \code{A}.
 \item a character vector giving a specific sequence which corresponds to the
 names of the matrices in \code{A}.
}

\code{Aseq="unif"} (default), then each matrix in \code{A} has an equal chance 
of being chosen at each timestep. If \code{A} is a matrix}

\item{draws}{if \code{vector="diri"}, the number of population vectors drawn
from dirichlet.}

\item{alpha.draws}{if \code{vector="diri"}, the alpha values passed to 
\code{rdirichlet}: used to bias draws towards or away from a certain population
structure.}

\item{PREcheck}{many functions in \code{popdemo} first check Primitivity, 
Reducibility and/or Ergodicity of matrices, with associated warnings and/or 
errors if a matrix breaks any assumptions. Set \code{PREcheck=FALSE} if you
want to bypass these checks.}
}
\description{
Project dynamics of a specified population matrix projection model.
}
\details{
If \code{vector} is specified, \code{project} will calculate population 
dynamics through time by projecting this vector / these vectors through 
\code{A}. If multiple vectors are specified, a separate population projection
is calculated for each.\cr\cr 
If \code{vector="n"}, \code{project} will automatically project the set of 
'stage-biased' vectors of \code{A}. Effectively, each vector is a population
consisting of all individuals in one stage. These projections are achieved using a 
set of standard basis vectors equal in number to the dimension of \code{A}.
The vectors have every element equal to 0, except for a single element equal to 1,  
i.e. for a matrix of dimension 3, the set of stage-biased vectors are: 
\code{c(1,0,0)}, \code{c(0,1,0)} and \code{c(0,0,1)}. Stage-biased projections are 
useful for seeing how extreme transient dynamics can be.\cr\cr
If \code{vector="diri"}, \code{project} draws random population vectors from 
the dirichlet distribution. \code{draws} gives the number of population vectors
to draw. \code{alpha.draws} gives the parameters for the dirichlet and can be
used to bias the draws towards or away from certain population structures.
The default is \code{alpha.draws="unif"}, which passes \code{rep(1,dim)} (where
dim is the dimension of the matrix), resulting in an equal probability of 
any random population vector. Relative values in the vector give the population
structure to focus the distribution on, and the absolute value of the vector
entries (and their sum) gives the strength of the distribution: values greater
than 1 make it more likely to draw from nearby that population structure, 
whilst values less than 1 make it less likely to draw from nearby that population
structure.\cr\cr
Projections returned are of length \code{time+1}, as the first element 
represents the population at \code{t=0}.\cr\cr
Projections have their own S3 plotting method \code{\link{plot.projection}}
to enable easy graphing.
}
\examples{
  # Create a 3x3 PPM
  ( A <- matrix(c(0,1,2,0.5,0.1,0,0,0.6,0.6), byrow=TRUE, ncol=3) )

  # Create an initial stage structure
  ( initial <- c(1,3,2) )

  # Project stage-biased dynamics of A over 70 intervals
  ( pr <- project(A, vector="n", time=70) )
  plot(pr)

  # Select the projection of stage 2 bias
  pr[,2]

  # Project stage-biased dynamics of standardised A over 30 
  # intervals and return demographic vectors
  ( pr2 <- project(A, vector="n", time=30, standard.A=TRUE, return.vec=TRUE) )
  plot(pr2)

  #Select the projection of stage 2 bias
  pr2$N[,2]

  # Select the density of stage 3 in bias 2 at time 10
  pr2$vec[11,3,2]

  # Select the time series of densities of stage 2 in bias 1
  pr2$vec[,2,1]

  #Select the matrix of population vectors for bias 2
  pr2$vec[,,2]

  # Project A over 50 intervals using a specified population structure
  ( pr3 <- project(A, vector=initial, time=50) )
  plot(pr3)

  # Project standardised dynamics of A over 10 intervals using 
  # standardised initial structure and return demographic vectors
  ( pr4 <- project(A, vector=initial, time=10, standard.vec=TRUE, 
                   standard.A=TRUE, return.vec=TRUE) )
  plot(pr4)

  # Select the time series for stage 1
  pr4$vec[,1]

  # Load the desert Tortoise matrix
  data(Tort)

  # Project 500 population vectors from a uniform dirichlet 
  # distribution, and plot the density of population sizes
  # within the bounds of population density
  pr5 <- project(Tort, time=30, vector="diri", draws=500, alpha.draws="unif",
                 standard.A=TRUE)
  plot(pr5)
                 
  
}
\seealso{
\code{\link{plot.projection}}
}
\concept{
projection project population
}
