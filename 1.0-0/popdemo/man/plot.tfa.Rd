% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/S3plot-tfa__tfam.R
\name{plot.tfa}
\alias{plot.tfa}
\alias{plot.tfam}
\title{Plot transfer function}
\usage{
\method{plot}{tfa}(x, xvar = NULL, yvar = NULL, ...)
}
\arguments{
\item{x}{an object of class 'tfa' (transfer function analysis) created using 
\code{\link{tfa_lambda}} or \code{\link{tfa_inertia}}, OR an object of class 
'tfam' (transfer function analysis matrix) created using 
\code{\link{tfam_lambda}} or \code{\link{tfam_inertia}}.}

\item{xvar, yvar}{(optional) the variables to plot on the x and y axes. May
be \code{"p"}, \code{"lambda"} or \code{"inertia"}. Defaults to
\code{xvar="p"} and \code{yvar="lambda"} for objects created using
\code{tfa_lambda} or \code{tfam_lambda}, and \code{xvar="p"} and 
\code{yvar="inertia"} for objects created using \code{tfa_inertia} or 
code{tfam_inertia}.}

\item{...}{arguments to be passed to methods: see \code{\link{par}} and
\code{\link{plot}}.}

\item{mar}{the margin limits on the plots: see \code{\link{par}}}
}
\description{
Plot a transfer function or matrix of transfer functions
}
\details{
\code{plot.tfa} plots transfer functions (class \code{tfa}) created using 
\code{\link{tfa_lambda}} or \code{\link{tfa_inertia}}.\cr\cr
\code{plot.tfam} plots matrices of transfer functions (class 
\code{tfam}) created using \code{\link{tfam_lambda}} or 
\code{\link{tfam_inertia}}. The plot is laid out to correspond with 
the nonzero entries of the matrix used to generate the transfer functions, 
for easy visual comparison of how perturbation affects different matrix 
elements.
}
\examples{
  # Create a 3x3 matrix
  ( A <- matrix(c(0,1,2,0.5,0.1,0,0,0.6,0.6), byrow=TRUE, ncol=3) )

  # Calculate the transfer function of A[3,2] given a range of lambda
  evals <- eigen(A)$values
  lmax <- which.max(Re(evals))
  lambda <- Re(evals[lmax])
  lambdarange <- seq(lambda-0.1, lambda+0.1, 0.01)
  ( transfer <- tfa_lambda(A, d=c(0,0,1), e=c(0,1,0), lambdarange=lambdarange) )

  # Plot the transfer function
  plot(transfer)

  # Create an initial stage structure
  ( initial <- c(1,3,2) )

  # Calculate the transfer function of upper bound on inertia 
  # given a perturbation to A[3,2]
  ( transfer<-tfa_inertia(A, d=c(0,0,1), e=c(0,1,0), bound="upper",
                          prange=seq(-0.6,0.4,0.01)) )

  # Plot the transfer function (defaults to inertia ~ p)
  plot(transfer)

  # Plot inertia against lambda
  plot(transfer, xvar="lambda", yvar="inertia")

  # Calculate the matrix of transfer functions using default arguments
  ( tfmat<-tfam_lambda(A) )

  # Plot the matrix of transfer functions
  plot(tfmat)

  # Calculate the matrix of transfer functions for inertia and 
  # specified initial stage structure using default arguments
  ( tfmat2<-tfam_inertia(A,vector=initial) )

  # Plot the result (defaults to inertia ~ p)
  plot(tfmat2)

  # Plot inertia ~ lambda
  plot(tfmat2, xvar="lambda", yvar="inertia")

}
\seealso{
Constructor functions: \code{\link{tfa_lambda}}, \code{\link{tfa_inertia}}, 
\code{\link{tfam_lambda}}, \code{\link{tfam_inertia}}
}
\concept{
KEYWORDS
}

